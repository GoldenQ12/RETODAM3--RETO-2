import com.dropbox.core.DbxAppInfo;
import com.dropbox.core.DbxAuthFinish;
import com.dropbox.core.DbxException;
import com.dropbox.core.DbxRequestConfig;
import com.dropbox.core.DbxWebAuthNoRedirect;
import com.dropbox.core.v2.DbxClientV2;
import com.dropbox.core.v2.files.FileMetadata;
import com.dropbox.core.v2.files.ListFolderResult;
import com.dropbox.core.v2.files.Metadata;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;

public class Dropbox {
    private static final String APP_KEY = "ulc3ur1w0e1v58g"; // Replace with your app key
    private static final String APP_SECRET = "63nrywvxyfkpb6u"; // Replace with your app secret
    private DbxClientV2 client;

    public Dropbox() throws IOException {
        authenticate();
        listFiles(client, APP_KEY);
    }

    private void authenticate() throws IOException {
        DbxAppInfo appInfo = new DbxAppInfo(APP_KEY, APP_SECRET);
        DbxRequestConfig config = DbxRequestConfig.newBuilder("dropbox/java-tutorial").build();
        DbxWebAuthNoRedirect webAuth = new DbxWebAuthNoRedirect(config, appInfo);

        String authorizeUrl = webAuth.start();
        System.out.println("1. Go to: " + authorizeUrl);
        System.out.println("2. Click 'Allow' and copy the authorization code.");


        try {
            DbxAuthFinish authFinish = webAuth.finish("sl.u.AFeISR7bsuYKR2ldRNSnVDRIyE3zl0Q3Avi-_VKr1hu88DZQ-6jx5s-Rm-eMIihcj65daFGeSwVp7P7ARk7vC0KBoHFKZMHw6KzHtTP6hmPybZV2LXrbTmAEaKYztar9popnlhMo6X26HoZT0wvMuvn0choGtalP5tUxWdYDpMrblzqjhwcz9l7wBEg5UObR9S6M7DFQdypySAv1c2sdHUUSH99jHRicgQ6t2-6ce5KixX5PN9AfMDPiOHoJpY8jsLrWVB91dgTtv10ZhUTxssxqWHcH78OhDWJx28AprDf8zTM0nTPO8R5HqAXiKOJsPEzSQvHEKVcsXMFtMd_4fQYxlkbdJnDcdPuWNn_cH5sbpsQX70V_Kslu7zdSgg-EXy-uVVAr2Ew5Sa2rmyQJ_5rlfeIgfuhu58ob0UL6q0g_fPLxSquQ1FeywwfICjdf-uSAVSc-5DvjCKdDfxZFUxXthbIrtC4LB1txvi3EdO4GXrlb19JTwDEvDj7tJmiIqTguzQ9iABOZx3wzqITzY8vTUouVROb2X473bRarTzuLZ2W4JZ09pn3WVSnXE7gTLOALRGrvJ-ipBCCdEkWLtylm7tcR1FfdzkoR-FABz8ls1VQbtAqS1Nd9jROhSa5LfpYYtPiUfiUZ8FpuixzCVw4GghE8PFKn-5xMte1TPuXBTWSsJ_56OArbRixyFs-KRSeSJT43iI4ah_n0a_c0kbND0kLl7Lj1Qt5A_yba5D0AY5ykNFrEWdw6asDDofV0QF_8EDRSqqxxEfCXt0t-iL95j-nRRc1Lar_uNV7lnnNavXsyS7tUmBnM_DAqhPMfGmOrXUlaw9i5RHGp0KHc9b1eDfk0Nn2QDyVYRfuqUT1N5LMAvWNkvJIycR9NZCqQ-sL8x0Rp9KP47GlN17eh__poMfgisuak4IKMxdaUdhqLwAO1Cz0Z3Q1ZpX8u6ZNwftsUt1PwaQ_-kc40ciIN2RqleYiZCyLancm_jAno3tdtmaHPbqX0p_gudVg_rPTFRe5MTlydAZKR7J4KoziNy1wZlZNaogVmEzfBppDRWOSbxyu5HD0765htgmcTvL48JxETx3WBvT69VN-tgQcIBWOeD-v77swG_YCnz7mC7S1rUYGW1-7kmGV62Mh7iwgYi_zNp8w_nCmLkgMqyksgHtZpx2eSWVH5Uv-mOheKVgm9H6eeymcIvwX3NSqrPbIslKhN5YTQY7FT9DtcV7MbA70FVJSpsWCPgCJ8SItxKmy6GtFbMsVd9BIMRvBdUaKt-SMbs43aQgxvI3jZNDyhThu-LCYfXLxZBt6U8-ZOnR8jwOkR6ev0LB4uf4ae9fvWAoTwGvZoquIT7MGY-hK6ViqGxtzxc86Qk0m4m_WHw-Lju3i4n0PqC-1mt5JZTeP6QrIX5H9ookkniRW0ALuLQuWsAzpkkvWHhD4xPuUewXCKi5AiLdqoc5PV0cuR-qxYyAc");
            String accessToken = authFinish.getAccessToken();
            System.out.println("Successfully authenticated! Access Token: " + accessToken);
        } catch (DbxException e) {
            e.printStackTrace();
        }
    }

    public void uploadFile(String localFilePath, String dropboxPath) {
        try (FileInputStream inputStream = new FileInputStream(localFilePath)) {
            FileMetadata metadata = client.files().uploadBuilder(dropboxPath)
                    .uploadAndFinish(inputStream);
            System.out.println("Uploaded: " + metadata.getName());
        } catch (DbxException | IOException e) {
            e.printStackTrace();
        }
    }
    
    public static void listFiles(DbxClientV2 client, String path) {
        try {
            ListFolderResult result = client.files().listFolder(path);
            List<Metadata> entries = result.getEntries();

            // Loop through the files and print their names
            for (Metadata metadata : entries) {
                if (metadata instanceof FileMetadata) {
                    FileMetadata fileMetadata = (FileMetadata) metadata;
                    System.out.println("File: " + fileMetadata.getName());
                }
            }

            // Check if there are more files to list
            while (result.getHasMore()) {
                result = client.files().listFolderContinue(result.getCursor());
                entries = result.getEntries();
                for (Metadata metadata : entries) {
                    if (metadata instanceof FileMetadata) {
                        FileMetadata fileMetadata = (FileMetadata) metadata;
                        System.out.println("File: " + fileMetadata.getName());
                    }
                }
            }
        } catch (DbxException e) {
            e.printStackTrace();
        }
    }

    public DbxClientV2 getClient() {
        return client;
    }
}